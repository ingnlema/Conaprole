{
  "id": "cfacd997-7028-4da4-8d64-c73f033b9ab1",
  "realm": "Conaprole",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "bruteForceStrategy": "MULTIPLE",
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "bae1457c-504b-403d-9d01-16eea0761c7c",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "cfacd997-7028-4da4-8d64-c73f033b9ab1",
        "attributes": {}
      },
      {
        "id": "d49a344f-175e-4ab6-897a-d18c3e8522ab",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "cfacd997-7028-4da4-8d64-c73f033b9ab1",
        "attributes": {}
      },
      {
        "id": "61c165e1-0abc-4f30-8278-67236cd23c3e",
        "name": "default-roles-conaprole",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "cfacd997-7028-4da4-8d64-c73f033b9ab1",
        "attributes": {}
      }
    ],
    "client": {
      "confidential-client": [],
      "realm-management": [
        {
          "id": "322add3c-fac7-4b2c-97e9-c68c13cab717",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "06e6f390-273f-4697-bac0-25efe05dbc8e",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "manage-users",
                "manage-identity-providers",
                "create-client",
                "query-realms",
                "view-authorization",
                "manage-realm",
                "view-clients",
                "manage-events",
                "query-clients",
                "view-events",
                "query-groups",
                "view-users",
                "manage-clients",
                "impersonation",
                "view-realm",
                "view-identity-providers",
                "query-users",
                "manage-authorization"
              ]
            }
          },
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "0923bc23-b612-4849-839d-ce52b6c8eb81",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "576f28ec-d4a5-4a80-9db7-bcead5f9cfd0",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "8e4a49b5-9796-4695-b596-152b0b347e37",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "f851e438-e1f5-48f8-bbe7-14f87aeb4ac7",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "7e2b476c-2be1-4222-a1f8-d5b36aab2fea",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "b4b6f853-6f34-4df5-8626-265ff85e350b",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "9750191d-1b52-4452-b38b-06efcdabaf4c",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "e47f12fb-57a9-4425-8fb9-163325ba0163",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "6430e46b-1868-4be9-8871-a91b164cef57",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "b07dfa15-9d1c-4692-a76f-375c8594f7ec",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "4391f327-7e29-468d-a44a-abdcb7eb2308",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "451fe1e6-2aab-4284-ba50-76fa3d61c9cb",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "2fd84f3e-3605-4ef5-a002-320bf730532b",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "7403a8d5-328c-4f26-a242-772eee7354ea",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "584de232-6d8d-4318-9bb6-bf1ddfe65ad4",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "643938d1-1dcd-4514-8ec7-0f9d3786747e",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        },
        {
          "id": "95d9555b-9a8a-40ee-93ad-985745a03caa",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
          "attributes": {}
        }
      ],
      "conaprole-admin-client": [],
      "public-client": [],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "9bdb25f4-3669-4eb2-9a51-51668cda24c8",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "8b4e67f5-5a9c-49e1-a556-1659622a9cd5",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "b2888bea-928c-4e8f-9ae0-a9071f506635",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "61961c98-9fe5-494f-94b1-f3e5f71c35fb",
          "attributes": {}
        },
        {
          "id": "9811ea71-34a8-4fe4-b338-685f3199eb06",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "61961c98-9fe5-494f-94b1-f3e5f71c35fb",
          "attributes": {}
        },
        {
          "id": "50db3688-1a1d-4930-b1fb-d3dbdf6b6bcc",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "61961c98-9fe5-494f-94b1-f3e5f71c35fb",
          "attributes": {}
        },
        {
          "id": "0bd40b14-6d45-44b5-a241-77a6d449d404",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "61961c98-9fe5-494f-94b1-f3e5f71c35fb",
          "attributes": {}
        },
        {
          "id": "80022134-94de-402c-8dfb-6badab178d04",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "61961c98-9fe5-494f-94b1-f3e5f71c35fb",
          "attributes": {}
        },
        {
          "id": "06c9379d-576a-4fbb-9d3e-32cc8bcf899b",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "61961c98-9fe5-494f-94b1-f3e5f71c35fb",
          "attributes": {}
        },
        {
          "id": "f50cadb8-f1f1-44c3-8381-34c0c554b9d3",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "61961c98-9fe5-494f-94b1-f3e5f71c35fb",
          "attributes": {}
        },
        {
          "id": "c1a56659-26a6-41e5-8d23-f67b2b93a494",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "61961c98-9fe5-494f-94b1-f3e5f71c35fb",
          "attributes": {}
        }
      ],
      "conaprole-auth-client": []
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "61c165e1-0abc-4f30-8278-67236cd23c3e",
    "name": "default-roles-conaprole",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "cfacd997-7028-4da4-8d64-c73f033b9ab1"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256",
    "RS256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "61961c98-9fe5-494f-94b1-f3e5f71c35fb",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/Conaprole/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/Conaprole/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "51aa7c12-ade6-47e7-b17f-3a9d42dc6544",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/Conaprole/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/Conaprole/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "1ce4e91e-e8c1-47bb-9163-0e4f3bb6ea52",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "380a7ff7-e6fe-4d36-8140-04eb0a74b8c0",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "8b4e67f5-5a9c-49e1-a556-1659622a9cd5",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e9bde39e-93d0-49fc-9cac-f1f8ca2fded4",
      "clientId": "conaprole-admin-client",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "MdyBcICzOkfdxLeDcbcyhi5Im3EtVOb9",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1741821525",
        "backchannel.logout.session.required": "true",
        "frontchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "service_account",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "011b5f5b-4a7f-4df0-80b5-246856def299",
      "clientId": "conaprole-auth-client",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "EMI6IRqofvQmXHhvCX3MiX9bVdqKN4VS",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1741812107",
        "backchannel.logout.session.required": "true",
        "frontchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "dcdea175-bd55-491c-8537-8551e1634fe1",
      "clientId": "confidential-client",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "ft8Iee1RSvoQlUqtYNgFUlyZMcE61lFU",
      "redirectUris": [
        "/*"
      ],
      "webOrigins": [
        "/*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1741800011",
        "backchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "service_account",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "963a57c8-f731-46f7-b375-81948841cf4a",
      "clientId": "public-client",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://www.keycloak.org/app/*"
      ],
      "webOrigins": [
        "https://www.keycloack.org"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "post.logout.redirect.uris": "https://www.keycloak.org",
        "frontchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "a85f19d0-4f91-44ad-be11-9f4ad405db5a",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "true"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    },
    {
      "id": "cd30757c-ddc7-45cb-8d6c-9c7dc3caf891",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/Conaprole/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/Conaprole/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "realm_client": "false",
        "client.use.lightweight.access.token.enabled": "true",
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "fab6d7e4-97ae-464f-a6d9-c108b9e6da02",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "basic",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "organization",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "c244bcc9-e238-4ff0-a44d-13d932f718bc",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "0563ec7e-f049-4829-8aad-8176a1421bd7",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1286bb16-c103-4a38-a270-259fe39b1873",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "4d12c7e7-0eec-492e-8f00-599b92008d6f",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "5c8f9004-3c62-442c-b691-3ca56efceac6",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "7f780402-1f59-469e-b198-f7ca1c1adf74",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "3687cde9-0cf1-468a-bc04-f9b92d0bb56c",
      "name": "saml_organization",
      "description": "Organization Membership",
      "protocol": "saml",
      "attributes": {
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "ebf27988-1aa3-485d-98c7-b96a4f760a44",
          "name": "organization",
          "protocol": "saml",
          "protocolMapper": "saml-organization-membership-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "056e2a7b-e301-45dd-8927-3223ea7045d3",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "405be772-cd37-40da-bbfb-ae4bae17fc5c",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "7f1bc7fd-5498-4faf-9605-c6ffb9320c24",
      "name": "service_account",
      "description": "Specific scope for a client enabled for service accounts",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "38f03823-b787-4625-b660-230acc23afaf",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "client_id",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "client_id",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a2619c8a-38e5-4201-84f4-a13ba8399996",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d255ac14-f1ba-46b8-8d79-a75bf3c94d77",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "785d30a2-1b93-4d54-b19d-59824639bd4a",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "add2d1ae-ffdb-4b11-a0d9-11f1f9f51c66",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d27a556f-ad64-46a0-8191-5a8cb278c1ea",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "848bf8fe-ae86-4fad-b290-ed41336d1b50",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "71031655-5deb-49de-90f4-299165bae5e0",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3e46e990-5824-43ea-b48b-010de8e7c3e0",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fb1f00ff-af1f-4535-aa2d-34bc70b021df",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "d8f892aa-86c8-424a-899a-ff56ad236142",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "35d2aa3f-bfcc-48e7-b7d5-ceccffea718d",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "23498449-9560-4524-8a81-9e6f40eb1160",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bb5bd6c2-fb9e-4665-b364-228ec7bb0e93",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6d32d82f-6ffe-4e24-b46a-b101d8505a49",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a6b408e5-db8a-4651-ae5c-41bf1d8ad452",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0297fd71-7c86-44b3-8805-e967c0744bf3",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "e617f243-16fc-4a69-83ec-a752ebb162d1",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "bd04a91a-590a-4612-bd82-e911d64fa89a",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "a1ef1906-e543-4280-844a-0a7b59730421",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "cd8e2eae-13a6-41a0-94cb-126e8aa6ee89",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "4d81a85b-4e1d-4b39-863d-f876ae60bb29",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "f3809ada-faa2-4785-ac31-ff3fb2f86e5c",
      "name": "basic",
      "description": "OpenID Connect scope for add all basic claims to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "e902601b-d5f7-4645-8562-3390b243ba61",
          "name": "auth_time",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "AUTH_TIME",
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "auth_time",
            "jsonType.label": "long"
          }
        },
        {
          "id": "0b54c630-a6ee-473a-93d5-119b15916853",
          "name": "sub",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-sub-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "abf6dfb0-42fc-48a4-b467-19f290df2978",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "63e0ccfb-536c-41b7-8045-3079fd957e0b",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "d551d3e9-3191-46f6-94b7-15ef54eea4b6",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "cefaf1eb-0a9a-4a36-9c05-ff57bb7a6a74",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "11303025-a29a-4c3c-8159-ed0295825963",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "361efb98-af3a-4f4c-bf74-5b58663c29e4",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "402605da-af68-4800-9b50-84ca2fc3e59e",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "6cd9373b-6e51-4368-8155-458628874664",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "b05eb085-0efc-4711-aa66-ac63551171c5",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f853218f-7b82-4356-a392-4a1c1d3f7593",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "6573ca1f-0125-475e-b970-2ac926a9cfaa",
      "name": "organization",
      "description": "Additional claims about the organization a subject belongs to",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "consent.screen.text": "${organizationScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "218a1de6-0dff-4778-8cce-b1c1bbea5f15",
          "name": "organization",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-organization-membership-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organization",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "saml_organization",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr",
    "basic"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "organization"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "f6c9c98e-f901-40da-99aa-8f669270d6c5",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper"
          ]
        }
      },
      {
        "id": "6118be3d-0ef0-4b62-bd90-d10bb5bcbc00",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "fce414e0-6f95-4a64-a46b-82caec7eb168",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "a418cf41-8b03-4240-9b38-bede8003f9d4",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "257a6591-a1f7-4aeb-a35e-9c1ba9f1e9b6",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "b7b5c44d-f8cc-4bf5-a0f4-7482d9cc21e0",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "364cda81-83f1-4839-8cb6-c81ebafeaf06",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "f360f2f3-fda4-4332-a486-6758f398bc13",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "1414814a-100f-453e-b75f-6427550ce1b7",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "cb79348a-80ad-4850-87fe-d8d14ed5ab7d"
          ],
          "secret": [
            "fGhoEkFWp7AIddcLlnEblQ"
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "06c26124-21ae-4a19-bb04-80448b6dee8c",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "ae6ba9d9-e6fc-498e-b718-8a4b84696bf1"
          ],
          "secret": [
            "HvTWhXNOVkdGQNdwrwfqJGdQMhNs4guOiZWWjjqYa06qDJWUubYpzRkKDBqDApDCh7vfg6BuqejWgFzR3iLRmW-Jan4UPF5XU3g6IhIufjzoA9r7I-iRtDpXuXMe4O9FQhRhQx9oCxvNVFHGx7RxhUNTDVvUyttJi88Tv__oOjI"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      },
      {
        "id": "fe3c93fe-4f90-439b-9009-06e9e44a9c2b",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAxfudfP7PkEDBww387Y4JcPskEK5BgoT6YmqBHACpMqDWNtegxPmFyNwMRZ4tiq8jitAOSMCMmsITv+hSLzqiVHNtsqeEKrlJuDK6QApa/WPcgIn3TlgE2Dzjc/iS7C3CdmozbOOBi5TmisYVupwg5kPZ6uDbd5+3tK6mTT8pfRHC4cjltkVdahJIL6Dhq0vPmj4AI0ZFTRC3I0ZxpGczINXvbbL6UvEZWBZ7uZWt4Q8gbEAyu5bSzQIoHi8yioyUxgt68Wx+iue+OWxZ8V3CyhmFKT/hlWv4LHUSpSoldHgfxlxpZcsvrpOGRvYJRt05hxmwPQUHwGzGDM2eJgkx1QIDAQABAoIBABpAS2jKOZfhOj/kgCu4eGCCcE0E6ftGKhP4Fr/xh33GzTiO3UqY4kgYg0kM2PGJWO9cOHSlkU8o2ikJQzJvdhw4BOzaIOBwWonBsifxJ5DvF4r0oDXDXnsUkb0sEcEerSj52nE+9kuddfcjHjj04Djf+MpXv8nsA9YBjVvzOstSHoQLls2XzpJXkz4lnoUJMVFgx2rdE7cFxd8ihb3aMNU1tDugDQq3goJH5sJ9xGT6ZvSBgA+izZV4Mndu4gATI3614NiCXPnVWu1o1LjxpQWFSyfd3Bai+8wJQ80nkFuWKw33pdhqjBB2+Q+hT3/chm+0/m5eVdYkWU8kmmaErpECgYEA7uXnmXT4fPaAqBpJuSY+Bx9JhBGf9a4swk/mGiLkBhm7Dtb4PVBKeERSwyLKQN7Zt0ehXqaSWOA1k9M+sO4OVSfiH1w4WhjJPbwLmjXdlcaVBlC9Ne2xHC51OCMO5dvkc/NHosbAdSXl1e1c14YSgBA6Im3KbbGaksNQgMWge3ECgYEA1Cfj5RLNRBSsgy8Vz6RIVPGHVYJMJ1xTcYZzuQeQkyG0zrYrbN0pWe4cJN9Wze6hj3GZyA0ROdlNliMzz0MBG5XXxEHr5keGZGvbOZmvPTvlC6FeREP0Q5waHzYYpA65syu6SaKlhPfJJvXUHEs1flLtP6+FqOnson+wujXuwqUCgYADWKkT1zWb2oAW2rdppoV76A5JkU2iTVxHJINenlp/U2DxZkV35mYEpUBbh2M54WU/UfuKrd6i7BEUDwNzywHcY4ChW9NWP76h5L5s3JBMBsoTmpHr7XZrpKLztFoDEj9y+Fdqikor2eoMQxTn1/LuZEvMK6mIO9Kkd6PrCdmjoQKBgCEw4HF9IInvJhIb8rCahgpsAv04tktOIWvYWhBvg4nRMyVH0MFmVErSeqq2GjF7jOERJ7rpeHFxcrbzaO6bD/hN2ATHP222cOsTCKgZSBYvYaURKNtLOlK9gESzxOUdvKWwSKOug3CrB1hGC1ol1geeV6mn/yQu/KtriK2JNIJVAoGBAJRUm/szfSIHlufNE2sljy7Rr6iygvbLHie/C3V5gQyjPGDU5WoRMLwqEnmni7E2eOzNPWESe64+dCRq+fCO5UPOQ8kpT6txBTMuClafR7FkjyHFopRRYV1hsV8oi63X/Y8/vofcE8Z4YrzK+jNJqORHh7PkbNL5pZsTPAGDmrfJ"
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICoTCCAYkCBgGVi0lGFTANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlDb25hcHJvbGUwHhcNMjUwMzEyMTY1NDQ5WhcNMzUwMzEyMTY1NjI5WjAUMRIwEAYDVQQDDAlDb25hcHJvbGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDF+518/s+QQMHDDfztjglw+yQQrkGChPpiaoEcAKkyoNY216DE+YXI3AxFni2KryOK0A5IwIyawhO/6FIvOqJUc22yp4QquUm4MrpAClr9Y9yAifdOWATYPONz+JLsLcJ2ajNs44GLlOaKxhW6nCDmQ9nq4Nt3n7e0rqZNPyl9EcLhyOW2RV1qEkgvoOGrS8+aPgAjRkVNELcjRnGkZzMg1e9tsvpS8RlYFnu5la3hDyBsQDK7ltLNAigeLzKKjJTGC3rxbH6K5745bFnxXcLKGYUpP+GVa/gsdRKlKiV0eB/GXGllyy+uk4ZG9glG3TmHGbA9BQfAbMYMzZ4mCTHVAgMBAAEwDQYJKoZIhvcNAQELBQADggEBALjqt/Lc6y2odHCj6oCwXjbW2XgQMGjdkQXqmZkjhJc57focYcmrFCE+HG844VdqKMF2L015WCthYvkUjO4ymsHCxsJaOjqD47QYVLEDPAkNAYEtU/J+orFnbQ16l4CzsVqXcrI8QbonpJwuslql5ykcLGqAJ+nu+zmNg2Jzyx3G5A6zXJxgarYM2COycuTycDuROAN9AdCqy7Rjd36sMgVIdT0QnSyiNYDPWEXyVFS+p56gDPmcJCWa13cW+NDKmaMwh5gj9yDEZ6+IzVIZq7fgTgAm42yU7aWwCGi58QgwCIrz0WKMJsLABBmGSunmtG5+7hz6IDum77egtY4ciPY="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "1ad7d6e5-611a-4842-be83-f7a94165f5e6",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEA110O0pCi+lMEV3UUG4ClyOXWXbOq5TqK5uQqxH2h9wan42HPhnET14jnoGO75TRLha1wQ8niL3hKOM2F7HDGnTCwBgrQnTrQBTpZJmsGHWilkHH5Z8Wn08wN5Ctlt/VscTfRTBKlOqTRxDmJkzAIPW+Ioydj7XSnXPkOAsf1yBO5CUJ/9ConrOhMZQ9ao3XKd2sI8RRgxBUY2sOGx8OHgzzN3jU36LhLqKvrvd07vlaztpDNlNqOPnixowxLdhpJ+3Z+4IRlWoaGntNLwqPqzNGoAt9t4aelKmINdxt5oltFq/fczFl6bOXFejjpSMQW9XkdH9/PRMvdkga85cHB6QIDAQABAoIBAARgOw3++5rFv022HqqY5HV2qxKEFS27cOlUW0SbD2SNLXHeschn6YjsepVdFWsosvykO6ba9iY0BeEN1wHpADYfMEJtK5Q4RtQGXZuc2tbT4qJS2IgZ4Wk5qRIY6iQQ3+tUgKOQsOwGP49iwmd71z0FVEPJZ/vCDikC0/ytOrKeH2smoRCexATklWFcYqhieS82yBheElBB5Q/DtizFA0f7zZWwZHyw9bGEVWJcXJcp4s7hkbzKuVpzvZ3Ary1Dwrbg+o0kkb1JiipdX+dF0dIJ5jI/DfQHtXXnGaF7SHMw6aZVGpsK67SdRkShGJtA90ykWY6Fr3DVvBGp+8vu5LECgYEA926kqYEqsxri3FnyjIPUW5JCIym2UbZaxumpRLS101fw7ddaRvDxCAZsnTAGvpTxkYe6RwFtezdZ077yx8EuHeCFcq1c/RiRsIt+qELEM3vhvog5gySec/GczNUIfti6Fk+3iZF3y1nNnofOxQTjUnDbGPhjgkjb5fycrkbpJ9ECgYEA3tIkfSB8E4cRR8dLa9uZJz9UbhOoOyiyyQH9469iw1VPXta510+Y29+RlU+4E0b1G3/F8hegeOiVWXVndbsJ1I7s1OfXn6bzw5DujWkxqsyhJFm/87Ws5E1B0lcRC9q97rHGsXNZTzupg1DVavfzZ8MwU1YVMRSbeCTR5tdtFpkCgYB3nTNZBipgP0UghRMuPqSwR/pVCVssEV28/0RnBH1J2B+OuybXWK8M1B45tvfrthE560VwAg6tHEr+hDbVvlvO8bVRhOGJMRFtKWJncS9sPB0bgLtc3J0FK+5DT1E2EQuUsaDmjj49PgKa+shIkl5aglhIr/tbBmHXwtDzpzAboQKBgA7zEGmovUpeHIWxVFkXMa5VbGe6P+ZAM8aSsKMPCFRMq/eT9oIAoCPYWx8maxY4A4flybUVarnR+Ps4ikl21BEDydX6/BeFDwPG/IpWTXPFKOaUcvF59fCXUlw3ZThjY6zZFpifQZW0Tgo2aSs1GYqTqPFebCuP02J7Le4L9BC5AoGAel82tW7ZeO+3ZY+cVssZnN9/WE9Y52UOSH7QHXe0kXFa1TIlLoWV5HSQIapHspqe337kn7MbNCQTNS3WZILMQq7PMqqKOOwQX5Kkvhz4F71mkRcAHQg77uA5TNLRr0KKbIItZjD5UXm3lntciMVtBxHl4csvGSGEwmY2JiFc8Mo="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICoTCCAYkCBgGVi0lFgjANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlDb25hcHJvbGUwHhcNMjUwMzEyMTY1NDQ5WhcNMzUwMzEyMTY1NjI5WjAUMRIwEAYDVQQDDAlDb25hcHJvbGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDXXQ7SkKL6UwRXdRQbgKXI5dZds6rlOorm5CrEfaH3BqfjYc+GcRPXiOegY7vlNEuFrXBDyeIveEo4zYXscMadMLAGCtCdOtAFOlkmawYdaKWQcflnxafTzA3kK2W39WxxN9FMEqU6pNHEOYmTMAg9b4ijJ2PtdKdc+Q4Cx/XIE7kJQn/0Kies6ExlD1qjdcp3awjxFGDEFRjaw4bHw4eDPM3eNTfouEuoq+u93Tu+VrO2kM2U2o4+eLGjDEt2Gkn7dn7ghGVahoae00vCo+rM0agC323hp6UqYg13G3miW0Wr99zMWXps5cV6OOlIxBb1eR0f389Ey92SBrzlwcHpAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAL9vsuQkic2c3gQjlazrAvaM4JFszj5puP/mV4chVfG+vrypq3rbmYkrQ1dyQh48wi2Ej/j2DZpmqIU+syFiVkhupcAm41l78n2HBXDihGyakO+ub2mua4c2R4FdduGroPDEHMtYSjP3tu8iv9oRRiYUDrdQOlE2fB3z4ux1puk2qa8Oy7IRrqT1P7z8rSqY3A1ZuYNDeMRWhFS5FZxD+EUnDWjj3CBwNzQTbwCqRe+uodQbJRPhlGkvMf8txVOMN2rOiTmoTXl7Fpc5wVzYsZDpHq/v7941nn28///fwqdoQjbHwJxljQlu9vgpwvoUF/Van/y3ZQv+bjq1k183Cq8="
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "0ca50cd9-074e-4a32-b67b-60c946f80093",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9594629e-9689-49fd-9967-bf7025d3f752",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bdc6414c-55b6-4af9-99d1-68db9ece0c29",
      "alias": "Browser - Conditional Organization",
      "description": "Flow to determine if the organization identity-first login is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "organization",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1b3deb5d-52e3-4a72-b1c8-283a668fe3c6",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bc0a531a-7b74-4a6c-bc5c-f2441d7bcaf5",
      "alias": "First Broker Login - Conditional Organization",
      "description": "Flow to determine if the authenticator that adds organization members is to be used",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-add-organization-member",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3474d64f-0981-43f9-a1d6-d5e5285c43cb",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a193f5e7-f3ca-4526-a231-e79c2780bf49",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fcaf63ad-6c0f-4e34-86eb-ee2105c5eed9",
      "alias": "Organization",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "368106e3-f113-4331-93cc-a4d9f6288ef6",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2491756e-634c-47d9-9a0d-7089e84a18d7",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b484998a-82a6-4f6f-aa46-0a461f4ad398",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "32d8d2ef-787f-4546-a0e9-d6c0b6e2ab9a",
      "alias": "browser",
      "description": "Browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 26,
          "autheticatorFlow": true,
          "flowAlias": "Organization",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fd74f458-b11f-493f-838b-2c24a8be1cea",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "aa883634-61f6-4590-808b-f389a30c53e9",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "40a1bbd5-e24f-4809-8a6b-9db9053b9a82",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6ba5a2bc-a985-4fc3-b4fd-d3bb9657b74d",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 50,
          "autheticatorFlow": true,
          "flowAlias": "First Broker Login - Conditional Organization",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3f3c1822-b420-47fc-bd89-bd1e86353bc0",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fff3c7cf-201b-48fb-82a5-8f5a1f2a684b",
      "alias": "registration",
      "description": "Registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "603d4733-d12d-43ef-921d-c7819ebc3130",
      "alias": "registration form",
      "description": "Registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ca2b8b91-e7cd-40cb-a96f-9123e3cd2ebc",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ff9dfd73-ec9d-435a-b2e7-0b2f574d4f51",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "e3836d2a-ff82-4430-a70a-3d0cb05ffe63",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "39a7434f-e7d1-4f42-9dd5-c1491b7635b9",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": true,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "26.1.4",
  "userManagedAccessAllowed": false,
  "organizationsEnabled": false,
  "verifiableCredentialsEnabled": false,
  "adminPermissionsEnabled": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  },
  "users": [
    {
      "id": "e2779dc0-10aa-478f-be1d-5825ab089948",
      "username": "dummy.user@example.com",
      "firstName": "Dummy",
      "lastName": "User",
      "email": "dummy.user@example.com",
      "emailVerified": true,
      "createdTimestamp": 1742749496,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "5f38b97d-0b23-4bd6-9376-bcf694597016",
          "type": "password",
          "createdDate": 1742749497838,
          "secretData": "{\"value\":\"34ugBbiiz2ukFK7xsfdVX6NQcfKdJbTfBermr4WBtlw=\",\"salt\":\"VXwDwXMSiUvMfN5lzaNYwQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-conaprole"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "1249e261-3ae4-49a8-98ac-38273b7f6c09",
      "username": "gabriel.lema@correo.ucu.edu.uy",
      "firstName": "Gabriel",
      "lastName": "Lema",
      "email": "gabriel.lema@correo.ucu.edu.uy",
      "emailVerified": true,
      "createdTimestamp": 1741800670782,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "f3e6a472-3e2a-4e8a-934a-1fcda0ec42e7",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1741800725159,
          "secretData": "{\"value\":\"QMfTdf6U6BUdTI+2W7V7t6obt3X4TDI5rE5xiXYnPEg=\",\"salt\":\"IbFa/Rw208Tp/FD7xyXM8w==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-conaprole"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "7ae339c4-fa37-46a8-a130-4d22299a9120",
      "username": "login@test.com",
      "firstName": "test",
      "lastName": "test",
      "email": "login@test.com",
      "emailVerified": true,
      "createdTimestamp": 1744075110,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "8ba83f5b-a8fe-416b-a26b-6dbda1fae145",
          "type": "password",
          "createdDate": 1744075111860,
          "secretData": "{\"value\":\"VTtsT9PssMQHQlN7AlWKJCmv36oYNkjBDvEVlkF/1s4=\",\"salt\":\"Cn+8W8WkUNEu6QPb+ASDpQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-conaprole"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "01485691-4d8e-4a80-85e5-fd62ed5e7f9b",
      "username": "matias.mastragelo@correo.ucu.edu.uy",
      "firstName": "Matias",
      "lastName": "Mastrangelo",
      "email": "matias.mastragelo@correo.ucu.edu.uy",
      "emailVerified": true,
      "createdTimestamp": 1741825393,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "4f6f87f5-2d18-4c6c-9310-a4f2fad3d36d",
          "type": "password",
          "createdDate": 1741825394456,
          "secretData": "{\"value\":\"l3WqEk3GwKtmSiHMcYXJCVcG6ijZG18tGA4rAnRa0ms=\",\"salt\":\"NvZ8N89ikqxv7OPqcVAEog==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-conaprole"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "71947c92-20a2-4742-add6-36e2ebae2904",
      "username": "nico.test@correo.ucu.edu.uy",
      "firstName": "Nico",
      "lastName": "Test",
      "email": "nico.test@correo.ucu.edu.uy",
      "emailVerified": true,
      "createdTimestamp": 1744072616,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "c6212555-d75f-4be8-8f9a-adac9a3af0b4",
          "type": "password",
          "createdDate": 1744072616834,
          "secretData": "{\"value\":\"mNt/io2jonki/O0lh6MiGUhRTI8enjWv9PF6XEKRBKo=\",\"salt\":\"o4o15n/JRue8QmBTBr0VAg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-conaprole"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "cc8bbb84-4627-45d6-8a60-0f04aeef6865",
      "username": "service-account-conaprole-admin-client",
      "emailVerified": false,
      "createdTimestamp": 1741821525920,
      "enabled": true,
      "totp": false,
      "serviceAccountClientId": "conaprole-admin-client",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-conaprole"
      ],
      "clientRoles": {
        "realm-management": [
          "manage-users",
          "realm-admin",
          "view-users"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "9c595e29-9cb8-4bdf-a4cb-d92145efe4f6",
      "username": "service-account-confidential-client",
      "emailVerified": false,
      "createdTimestamp": 1741800011932,
      "enabled": true,
      "totp": false,
      "serviceAccountClientId": "confidential-client",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-conaprole"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "99429ac5-9470-441b-9b94-9b3f581dce87",
      "username": "test.user@example.com",
      "firstName": "Dummy",
      "lastName": "User",
      "email": "test.user@example.com",
      "emailVerified": true,
      "createdTimestamp": 1744158107,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "fc57236b-fa48-4922-82a7-4ca873a0cda4",
          "type": "password",
          "createdDate": 1744158115121,
          "secretData": "{\"value\":\"IBXhwjBpnPXoRwAE27tgYevu2OkZp0hkDdk9qvkawR0=\",\"salt\":\"hgY4UVZdT/mRH6B93H1UyQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-conaprole"
      ],
      "notBefore": 0,
      "groups": []
    }
  ]
}