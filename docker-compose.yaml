services:
  conaprole.orders.api:
    image: conaprole.orders.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    build:
      context: .
      dockerfile: src/Conaprole.Orders.Api/Dockerfile
    depends_on:
      conaprole.orders-db:
        condition: service_healthy
      conaprole-idp:
        condition: service_healthy
    ports:
      - "8080:8080"
  conaprole.orders-db:
    image: postgres:latest
    container_name: Conaprome.Orders.Db
    environment: 
      - POSTGRES_DB=conaprole.orders
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./containers/database:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
  conaprole-idp:
    image: quay.io/keycloak/keycloak:22.0.5
    container_name: Conaprole.Identity
    command: start-dev --import-realm
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    volumes:
      - keycloak-data:/opt/keycloak/data
      - ./containers/identity/import:/opt/keycloak/data/import
    ports:
      - "18080:8080"
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080 && echo -e 'GET / HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n' >&3 && timeout 5 grep -q '200 OK' <&3; exec 3<&-; exec 3>&-"]
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 120s

volumes:
  keycloak-data: